openapi: 3.0.0
info:
  version: "1.0.0"
  title: LineUp Remote
  description: LineUp Remote
servers:
  - url: /api
paths:
  /row/:
    get:
      summary: get a bunch of rows
      operationId: api.get_rows
      parameters:
        - name: ids
          in: query
          explode: false
          schema:
            type: array
            items:
              - type: integer
                format: int32

      responses:
        '200':
          description: Return rows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Row'
        '404':
          description: Row does not exist
  /row/count:
    get:
      summary: get number of rows
      operationId: api.get_row_count
      responses:
        '200':
          description: Return number of rows
          content:
            application/json:
              schema:
                type: integer
                format: int32
        '404':
          description: Row does not exist
  /row/{row_id}:
    get:
      summary: get a row by id
      operationId: api.get_row
      parameters:
        - $ref: '#/components/parameters/row_id'
      responses:
        '200':
          description: Return row
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
        '404':
          description: Row does not exist
components:
  parameters:
    row_id:
      name: row_id
      description: Row's Unique identifier
      in: path
      required: true
      schema:
        type: integer
        format: int32
  schemas:
    Row:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Unique identifier
          example: '123'
          readOnly: true
        d:
          type: string
        a:
          type: number
          format: float
        cat:
          type: string
          enum:
            - c1
            - c2
            - c3
        cat2:
          type: string
          enum:
            - a1
            - a2
    OrderedGroup:
      type: object
      required:
        - name
        - color
        - order
      properties:
        name:
          type: string
        color:
          type: string
        order:
          type: string
          format: byte
    SortResult:
      type: object
      required:
        - maxDataIndex
        - groups
      properties:
        maxDataIndex:
          type: integer
          format: int32
        groups:
          type: array
          items:
            - $ref: '#/components/schemas/OrderedGroup'
